// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.1
// source: proto/auction/auction.proto

package auction

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to start a new auction.
type AddAuctionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionInfo   *AuctionInfo           `protobuf:"bytes,1,opt,name=auction_info,json=auctionInfo,proto3" json:"auction_info,omitempty"` // The details of the auction to start.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAuctionRequest) Reset() {
	*x = AddAuctionRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAuctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAuctionRequest) ProtoMessage() {}

func (x *AddAuctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAuctionRequest.ProtoReflect.Descriptor instead.
func (*AddAuctionRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{0}
}

func (x *AddAuctionRequest) GetAuctionInfo() *AuctionInfo {
	if x != nil {
		return x.AuctionInfo
	}
	return nil
}

// Response for starting an auction.
type AddAuctionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether the auction was successfully started.
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // Additional information about the operation.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAuctionResponse) Reset() {
	*x = AddAuctionResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAuctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAuctionResponse) ProtoMessage() {}

func (x *AddAuctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAuctionResponse.ProtoReflect.Descriptor instead.
func (*AddAuctionResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{1}
}

func (x *AddAuctionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddAuctionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to submit multiple bids for an auction.
type SubmitBidsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       int64                  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`      // The unique identifier of the chain.
	AuctionId     string                 `protobuf:"bytes,2,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"` // The unique identifier of the auction.
	BidList       []*Bid                 `protobuf:"bytes,3,rep,name=bid_list,json=bidList,proto3" json:"bid_list,omitempty"`       // The list of bids to submit.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBidsRequest) Reset() {
	*x = SubmitBidsRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBidsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBidsRequest) ProtoMessage() {}

func (x *SubmitBidsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBidsRequest.ProtoReflect.Descriptor instead.
func (*SubmitBidsRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitBidsRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *SubmitBidsRequest) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *SubmitBidsRequest) GetBidList() []*Bid {
	if x != nil {
		return x.BidList
	}
	return nil
}

// Response for submitting multiple bids.
type SubmitBidsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether the bids were successfully submitted.
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // Additional information about the operation.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBidsResponse) Reset() {
	*x = SubmitBidsResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBidsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBidsResponse) ProtoMessage() {}

func (x *SubmitBidsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBidsResponse.ProtoReflect.Descriptor instead.
func (*SubmitBidsResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitBidsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitBidsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request for auction information.
type GetAuctionInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       int64                  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`      // The unique identifier of the chain.
	AuctionId     string                 `protobuf:"bytes,2,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"` // The unique identifier of the auction.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionInfoRequest) Reset() {
	*x = GetAuctionInfoRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionInfoRequest) ProtoMessage() {}

func (x *GetAuctionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAuctionInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{4}
}

func (x *GetAuctionInfoRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *GetAuctionInfoRequest) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

// Response containing auction information.
type GetAuctionInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionInfo   *AuctionInfo           `protobuf:"bytes,1,opt,name=auction_info,json=auctionInfo,proto3" json:"auction_info,omitempty"` // The details of the auction.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionInfoResponse) Reset() {
	*x = GetAuctionInfoResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionInfoResponse) ProtoMessage() {}

func (x *GetAuctionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAuctionInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{5}
}

func (x *GetAuctionInfoResponse) GetAuctionInfo() *AuctionInfo {
	if x != nil {
		return x.AuctionInfo
	}
	return nil
}

// Request for the latest transactions of bids (TOB).
type GetLatestTobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       int64                  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"` // The unique identifier of the chain.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestTobRequest) Reset() {
	*x = GetLatestTobRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestTobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestTobRequest) ProtoMessage() {}

func (x *GetLatestTobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestTobRequest.ProtoReflect.Descriptor instead.
func (*GetLatestTobRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{6}
}

func (x *GetLatestTobRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

// Response containing the latest transactions of bids.
type GetLatestTobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxList        []*Tx                  `protobuf:"bytes,1,rep,name=tx_list,json=txList,proto3" json:"tx_list,omitempty"` // The list of transactions.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestTobResponse) Reset() {
	*x = GetLatestTobResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestTobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestTobResponse) ProtoMessage() {}

func (x *GetLatestTobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestTobResponse.ProtoReflect.Descriptor instead.
func (*GetLatestTobResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{7}
}

func (x *GetLatestTobResponse) GetTxList() []*Tx {
	if x != nil {
		return x.TxList
	}
	return nil
}

// Request for the current state of an auction.
type GetAuctionStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       int64                  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"` // The unique identifier of the chain.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionStateRequest) Reset() {
	*x = GetAuctionStateRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionStateRequest) ProtoMessage() {}

func (x *GetAuctionStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionStateRequest.ProtoReflect.Descriptor instead.
func (*GetAuctionStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{8}
}

func (x *GetAuctionStateRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

// Response containing the current state of an auction.
type GetAuctionStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *AuctionState          `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"` // The current state of the auction.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionStateResponse) Reset() {
	*x = GetAuctionStateResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionStateResponse) ProtoMessage() {}

func (x *GetAuctionStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionStateResponse.ProtoReflect.Descriptor instead.
func (*GetAuctionStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{9}
}

func (x *GetAuctionStateResponse) GetState() *AuctionState {
	if x != nil {
		return x.State
	}
	return nil
}

// Represents a transaction submitted by a bidder.
type Tx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxData        string                 `protobuf:"bytes,1,opt,name=tx_data,json=txData,proto3" json:"tx_data,omitempty"` // The raw transaction data.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tx) Reset() {
	*x = Tx{}
	mi := &file_proto_auction_auction_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{10}
}

func (x *Tx) GetTxData() string {
	if x != nil {
		return x.TxData
	}
	return ""
}

// Represents a bid submitted by a buyer.
type Bid struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AuctionId       string                 `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`                   // The unique identifier of the auction.
	ChainId         int64                  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`                        // The unique identifier of the chain.
	BidderAddr      string                 `protobuf:"bytes,3,opt,name=bidder_addr,json=bidderAddr,proto3" json:"bidder_addr,omitempty"`                // The address of the bidder.
	BidAmount       int64                  `protobuf:"varint,4,opt,name=bid_amount,json=bidAmount,proto3" json:"bid_amount,omitempty"`                  // The amount of the bid.
	BidderSignature string                 `protobuf:"bytes,5,opt,name=bidder_signature,json=bidderSignature,proto3" json:"bidder_signature,omitempty"` // The signature of the bidder.
	TxList          []*Tx                  `protobuf:"bytes,6,rep,name=tx_list,json=txList,proto3" json:"tx_list,omitempty"`                            // The list of transactions associated with the bid.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Bid) Reset() {
	*x = Bid{}
	mi := &file_proto_auction_auction_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bid) ProtoMessage() {}

func (x *Bid) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bid.ProtoReflect.Descriptor instead.
func (*Bid) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{11}
}

func (x *Bid) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *Bid) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Bid) GetBidderAddr() string {
	if x != nil {
		return x.BidderAddr
	}
	return ""
}

func (x *Bid) GetBidAmount() int64 {
	if x != nil {
		return x.BidAmount
	}
	return 0
}

func (x *Bid) GetBidderSignature() string {
	if x != nil {
		return x.BidderSignature
	}
	return ""
}

func (x *Bid) GetTxList() []*Tx {
	if x != nil {
		return x.TxList
	}
	return nil
}

// Represents the details of an auction.
type AuctionInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AuctionId       string                 `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`                   // The unique identifier of the auction.
	ChainId         int64                  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`                        // The unique identifier of the chain.
	StartTime       int64                  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                  // The start time of the auction (Unix timestamp in milliseconds).
	EndTime         int64                  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                        // The end time of the auction (Unix timestamp in milliseconds).
	SellerAddress   string                 `protobuf:"bytes,5,opt,name=seller_address,json=sellerAddress,proto3" json:"seller_address,omitempty"`       // The address of the seller.
	BlockNumber     int64                  `protobuf:"varint,6,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`            // The block number where the auction is registered.
	BlockspaceSize  int64                  `protobuf:"varint,7,opt,name=blockspace_size,json=blockspaceSize,proto3" json:"blockspace_size,omitempty"`   // The block space size being auctioned.
	SellerSignature string                 `protobuf:"bytes,8,opt,name=seller_signature,json=sellerSignature,proto3" json:"seller_signature,omitempty"` // The seller's signature for the auction.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AuctionInfo) Reset() {
	*x = AuctionInfo{}
	mi := &file_proto_auction_auction_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuctionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionInfo) ProtoMessage() {}

func (x *AuctionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionInfo.ProtoReflect.Descriptor instead.
func (*AuctionInfo) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{12}
}

func (x *AuctionInfo) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *AuctionInfo) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *AuctionInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AuctionInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AuctionInfo) GetSellerAddress() string {
	if x != nil {
		return x.SellerAddress
	}
	return ""
}

func (x *AuctionInfo) GetBlockNumber() int64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *AuctionInfo) GetBlockspaceSize() int64 {
	if x != nil {
		return x.BlockspaceSize
	}
	return 0
}

func (x *AuctionInfo) GetSellerSignature() string {
	if x != nil {
		return x.SellerSignature
	}
	return ""
}

// Represents the state of an auction.
type AuctionState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionInfo   *AuctionInfo           `protobuf:"bytes,1,opt,name=auction_info,json=auctionInfo,proto3" json:"auction_info,omitempty"`      // The details of the auction.
	BidList       []*Bid                 `protobuf:"bytes,2,rep,name=bid_list,json=bidList,proto3" json:"bid_list,omitempty"`                  // The list of all bids submitted.
	SortedTxList  []*Tx                  `protobuf:"bytes,3,rep,name=sorted_tx_list,json=sortedTxList,proto3" json:"sorted_tx_list,omitempty"` // The list of transactions sorted.
	IsEnded       bool                   `protobuf:"varint,4,opt,name=is_ended,json=isEnded,proto3" json:"is_ended,omitempty"`                 // Whether the auction has ended.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuctionState) Reset() {
	*x = AuctionState{}
	mi := &file_proto_auction_auction_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuctionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionState) ProtoMessage() {}

func (x *AuctionState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionState.ProtoReflect.Descriptor instead.
func (*AuctionState) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{13}
}

func (x *AuctionState) GetAuctionInfo() *AuctionInfo {
	if x != nil {
		return x.AuctionInfo
	}
	return nil
}

func (x *AuctionState) GetBidList() []*Bid {
	if x != nil {
		return x.BidList
	}
	return nil
}

func (x *AuctionState) GetSortedTxList() []*Tx {
	if x != nil {
		return x.SortedTxList
	}
	return nil
}

func (x *AuctionState) GetIsEnded() bool {
	if x != nil {
		return x.IsEnded
	}
	return false
}

var File_proto_auction_auction_proto protoreflect.FileDescriptor

var file_proto_auction_auction_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x48, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76,
	0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x08, 0x62, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x07, 0x62,
	0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x51, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x0c, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x54, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x78, 0x52, 0x06,
	0x74, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x02, 0x54, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xd0, 0x01, 0x0a, 0x03, 0x42, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x69, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x24, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x78, 0x52, 0x06, 0x74,
	0x78, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9f, 0x02, 0x0a, 0x0b, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x0c, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x27, 0x0a, 0x08, 0x62, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x69,
	0x64, 0x52, 0x07, 0x62, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0e, 0x73, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x78, 0x52,
	0x0c, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x32, 0x94, 0x03, 0x0a, 0x0e, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69, 0x64, 0x73,
	0x12, 0x1a, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x62, 0x12, 0x1c, 0x2e, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x54, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x78, 0x79, 0x7a, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x62, 0x75, 0x6c,
	0x62, 0x2d, 0x74, 0x64, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_auction_auction_proto_rawDescOnce sync.Once
	file_proto_auction_auction_proto_rawDescData = file_proto_auction_auction_proto_rawDesc
)

func file_proto_auction_auction_proto_rawDescGZIP() []byte {
	file_proto_auction_auction_proto_rawDescOnce.Do(func() {
		file_proto_auction_auction_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_auction_auction_proto_rawDescData)
	})
	return file_proto_auction_auction_proto_rawDescData
}

var file_proto_auction_auction_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_auction_auction_proto_goTypes = []any{
	(*AddAuctionRequest)(nil),       // 0: auction.AddAuctionRequest
	(*AddAuctionResponse)(nil),      // 1: auction.AddAuctionResponse
	(*SubmitBidsRequest)(nil),       // 2: auction.SubmitBidsRequest
	(*SubmitBidsResponse)(nil),      // 3: auction.SubmitBidsResponse
	(*GetAuctionInfoRequest)(nil),   // 4: auction.GetAuctionInfoRequest
	(*GetAuctionInfoResponse)(nil),  // 5: auction.GetAuctionInfoResponse
	(*GetLatestTobRequest)(nil),     // 6: auction.GetLatestTobRequest
	(*GetLatestTobResponse)(nil),    // 7: auction.GetLatestTobResponse
	(*GetAuctionStateRequest)(nil),  // 8: auction.GetAuctionStateRequest
	(*GetAuctionStateResponse)(nil), // 9: auction.GetAuctionStateResponse
	(*Tx)(nil),                      // 10: auction.Tx
	(*Bid)(nil),                     // 11: auction.Bid
	(*AuctionInfo)(nil),             // 12: auction.AuctionInfo
	(*AuctionState)(nil),            // 13: auction.AuctionState
}
var file_proto_auction_auction_proto_depIdxs = []int32{
	12, // 0: auction.AddAuctionRequest.auction_info:type_name -> auction.AuctionInfo
	11, // 1: auction.SubmitBidsRequest.bid_list:type_name -> auction.Bid
	12, // 2: auction.GetAuctionInfoResponse.auction_info:type_name -> auction.AuctionInfo
	10, // 3: auction.GetLatestTobResponse.tx_list:type_name -> auction.Tx
	13, // 4: auction.GetAuctionStateResponse.state:type_name -> auction.AuctionState
	10, // 5: auction.Bid.tx_list:type_name -> auction.Tx
	12, // 6: auction.AuctionState.auction_info:type_name -> auction.AuctionInfo
	11, // 7: auction.AuctionState.bid_list:type_name -> auction.Bid
	10, // 8: auction.AuctionState.sorted_tx_list:type_name -> auction.Tx
	0,  // 9: auction.AuctionService.AddAuction:input_type -> auction.AddAuctionRequest
	2,  // 10: auction.AuctionService.SubmitBids:input_type -> auction.SubmitBidsRequest
	4,  // 11: auction.AuctionService.GetAuctionInfo:input_type -> auction.GetAuctionInfoRequest
	6,  // 12: auction.AuctionService.GetLatestTob:input_type -> auction.GetLatestTobRequest
	8,  // 13: auction.AuctionService.GetAuctionState:input_type -> auction.GetAuctionStateRequest
	1,  // 14: auction.AuctionService.AddAuction:output_type -> auction.AddAuctionResponse
	3,  // 15: auction.AuctionService.SubmitBids:output_type -> auction.SubmitBidsResponse
	5,  // 16: auction.AuctionService.GetAuctionInfo:output_type -> auction.GetAuctionInfoResponse
	7,  // 17: auction.AuctionService.GetLatestTob:output_type -> auction.GetLatestTobResponse
	9,  // 18: auction.AuctionService.GetAuctionState:output_type -> auction.GetAuctionStateResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_auction_auction_proto_init() }
func file_proto_auction_auction_proto_init() {
	if File_proto_auction_auction_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_auction_auction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_auction_auction_proto_goTypes,
		DependencyIndexes: file_proto_auction_auction_proto_depIdxs,
		MessageInfos:      file_proto_auction_auction_proto_msgTypes,
	}.Build()
	File_proto_auction_auction_proto = out.File
	file_proto_auction_auction_proto_rawDesc = nil
	file_proto_auction_auction_proto_goTypes = nil
	file_proto_auction_auction_proto_depIdxs = nil
}

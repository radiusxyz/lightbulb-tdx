// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.1
// source: proto/auction/auction.proto

package auction

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartAuctionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionId     string                 `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	Info          *AuctionInfo           `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartAuctionRequest) Reset() {
	*x = StartAuctionRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartAuctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAuctionRequest) ProtoMessage() {}

func (x *StartAuctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAuctionRequest.ProtoReflect.Descriptor instead.
func (*StartAuctionRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{0}
}

func (x *StartAuctionRequest) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *StartAuctionRequest) GetInfo() *AuctionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type StartAuctionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartAuctionResponse) Reset() {
	*x = StartAuctionResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartAuctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAuctionResponse) ProtoMessage() {}

func (x *StartAuctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAuctionResponse.ProtoReflect.Descriptor instead.
func (*StartAuctionResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{1}
}

func (x *StartAuctionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartAuctionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SubmitBidRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionId     string                 `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	Bid           *Bid                   `protobuf:"bytes,2,opt,name=bid,proto3" json:"bid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBidRequest) Reset() {
	*x = SubmitBidRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBidRequest) ProtoMessage() {}

func (x *SubmitBidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBidRequest.ProtoReflect.Descriptor instead.
func (*SubmitBidRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitBidRequest) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *SubmitBidRequest) GetBid() *Bid {
	if x != nil {
		return x.Bid
	}
	return nil
}

type SubmitBidResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBidResponse) Reset() {
	*x = SubmitBidResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBidResponse) ProtoMessage() {}

func (x *SubmitBidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBidResponse.ProtoReflect.Descriptor instead.
func (*SubmitBidResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitBidResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitBidResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SubmitBidBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionId     string                 `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	Bids          []*Bid                 `protobuf:"bytes,2,rep,name=bids,proto3" json:"bids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBidBatchRequest) Reset() {
	*x = SubmitBidBatchRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBidBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBidBatchRequest) ProtoMessage() {}

func (x *SubmitBidBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBidBatchRequest.ProtoReflect.Descriptor instead.
func (*SubmitBidBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitBidBatchRequest) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *SubmitBidBatchRequest) GetBids() []*Bid {
	if x != nil {
		return x.Bids
	}
	return nil
}

type SubmitBidBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBidBatchResponse) Reset() {
	*x = SubmitBidBatchResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBidBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBidBatchResponse) ProtoMessage() {}

func (x *SubmitBidBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBidBatchResponse.ProtoReflect.Descriptor instead.
func (*SubmitBidBatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitBidBatchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitBidBatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RequestSaleInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestSaleInfoRequest) Reset() {
	*x = RequestSaleInfoRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestSaleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSaleInfoRequest) ProtoMessage() {}

func (x *RequestSaleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSaleInfoRequest.ProtoReflect.Descriptor instead.
func (*RequestSaleInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{6}
}

type RequestSaleInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionId     string                 `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	Info          *AuctionInfo           `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestSaleInfoResponse) Reset() {
	*x = RequestSaleInfoResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestSaleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSaleInfoResponse) ProtoMessage() {}

func (x *RequestSaleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSaleInfoResponse.ProtoReflect.Descriptor instead.
func (*RequestSaleInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{7}
}

func (x *RequestSaleInfoResponse) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *RequestSaleInfoResponse) GetInfo() *AuctionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetLatestTobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestTobRequest) Reset() {
	*x = GetLatestTobRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestTobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestTobRequest) ProtoMessage() {}

func (x *GetLatestTobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestTobRequest.ProtoReflect.Descriptor instead.
func (*GetLatestTobRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{8}
}

type GetLatestTobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxList        []*Tx                  `protobuf:"bytes,1,rep,name=tx_list,json=txList,proto3" json:"tx_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestTobResponse) Reset() {
	*x = GetLatestTobResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestTobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestTobResponse) ProtoMessage() {}

func (x *GetLatestTobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestTobResponse.ProtoReflect.Descriptor instead.
func (*GetLatestTobResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{9}
}

func (x *GetLatestTobResponse) GetTxList() []*Tx {
	if x != nil {
		return x.TxList
	}
	return nil
}

type GetAuctionStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionStateRequest) Reset() {
	*x = GetAuctionStateRequest{}
	mi := &file_proto_auction_auction_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionStateRequest) ProtoMessage() {}

func (x *GetAuctionStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionStateRequest.ProtoReflect.Descriptor instead.
func (*GetAuctionStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{10}
}

type GetAuctionStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *AuctionState          `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionStateResponse) Reset() {
	*x = GetAuctionStateResponse{}
	mi := &file_proto_auction_auction_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionStateResponse) ProtoMessage() {}

func (x *GetAuctionStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionStateResponse.ProtoReflect.Descriptor instead.
func (*GetAuctionStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{11}
}

func (x *GetAuctionStateResponse) GetState() *AuctionState {
	if x != nil {
		return x.State
	}
	return nil
}

type AuctionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime     int64                  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Unix timestamp in milliseconds
	EndTime       int64                  `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Unix timestamp in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuctionInfo) Reset() {
	*x = AuctionInfo{}
	mi := &file_proto_auction_auction_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuctionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionInfo) ProtoMessage() {}

func (x *AuctionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionInfo.ProtoReflect.Descriptor instead.
func (*AuctionInfo) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{12}
}

func (x *AuctionInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuctionInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AuctionInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type Bid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BidderAddr    string                 `protobuf:"bytes,1,opt,name=bidder_addr,json=bidderAddr,proto3" json:"bidder_addr,omitempty"`
	BidAmount     int64                  `protobuf:"varint,2,opt,name=bid_amount,json=bidAmount,proto3" json:"bid_amount,omitempty"` // 추가 필드가 필요하면 여기에 정의
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bid) Reset() {
	*x = Bid{}
	mi := &file_proto_auction_auction_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bid) ProtoMessage() {}

func (x *Bid) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bid.ProtoReflect.Descriptor instead.
func (*Bid) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{13}
}

func (x *Bid) GetBidderAddr() string {
	if x != nil {
		return x.BidderAddr
	}
	return ""
}

func (x *Bid) GetBidAmount() int64 {
	if x != nil {
		return x.BidAmount
	}
	return 0
}

type Tx struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tx 구조에 맞게 필드 정의
	TxId          string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Details       string `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tx) Reset() {
	*x = Tx{}
	mi := &file_proto_auction_auction_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{14}
}

func (x *Tx) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *Tx) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type AuctionState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionInfo   *AuctionInfo           `protobuf:"bytes,1,opt,name=auction_info,json=auctionInfo,proto3" json:"auction_info,omitempty"`
	Bids          []*Bid                 `protobuf:"bytes,2,rep,name=bids,proto3" json:"bids,omitempty"`
	IsEnded       bool                   `protobuf:"varint,3,opt,name=is_ended,json=isEnded,proto3" json:"is_ended,omitempty"`
	HighestBid    int64                  `protobuf:"varint,4,opt,name=highest_bid,json=highestBid,proto3" json:"highest_bid,omitempty"`
	Winner        string                 `protobuf:"bytes,5,opt,name=winner,proto3" json:"winner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuctionState) Reset() {
	*x = AuctionState{}
	mi := &file_proto_auction_auction_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuctionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionState) ProtoMessage() {}

func (x *AuctionState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auction_auction_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionState.ProtoReflect.Descriptor instead.
func (*AuctionState) Descriptor() ([]byte, []int) {
	return file_proto_auction_auction_proto_rawDescGZIP(), []int{15}
}

func (x *AuctionState) GetAuctionInfo() *AuctionInfo {
	if x != nil {
		return x.AuctionInfo
	}
	return nil
}

func (x *AuctionState) GetBids() []*Bid {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *AuctionState) GetIsEnded() bool {
	if x != nil {
		return x.IsEnded
	}
	return false
}

func (x *AuctionState) GetHighestBid() int64 {
	if x != nil {
		return x.HighestBid
	}
	return 0
}

func (x *AuctionState) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

var File_proto_auction_auction_proto protoreflect.FileDescriptor

var file_proto_auction_auction_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x51, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x69, 0x64,
	0x52, 0x03, 0x62, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42,
	0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x58,
	0x0a, 0x15, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x69, 0x64, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x22, 0x4c, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x42, 0x69, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x62, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54,
	0x78, 0x52, 0x06, 0x74, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x57, 0x0a, 0x0b, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x03, 0x42, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x69, 0x64, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x62, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x02, 0x54,
	0x78, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x37, 0x0a, 0x0c, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x04, 0x62, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x69, 0x67, 0x68, 0x65,
	0x73, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x42, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x32, 0xed, 0x03, 0x0a, 0x0e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69, 0x64, 0x12, 0x19, 0x2e,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69,
	0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x69, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x62, 0x12, 0x1c, 0x2e,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x78, 0x79, 0x7a, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x62, 0x75,
	0x6c, 0x62, 0x2d, 0x74, 0x64, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_auction_auction_proto_rawDescOnce sync.Once
	file_proto_auction_auction_proto_rawDescData = file_proto_auction_auction_proto_rawDesc
)

func file_proto_auction_auction_proto_rawDescGZIP() []byte {
	file_proto_auction_auction_proto_rawDescOnce.Do(func() {
		file_proto_auction_auction_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_auction_auction_proto_rawDescData)
	})
	return file_proto_auction_auction_proto_rawDescData
}

var file_proto_auction_auction_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_auction_auction_proto_goTypes = []any{
	(*StartAuctionRequest)(nil),     // 0: auction.StartAuctionRequest
	(*StartAuctionResponse)(nil),    // 1: auction.StartAuctionResponse
	(*SubmitBidRequest)(nil),        // 2: auction.SubmitBidRequest
	(*SubmitBidResponse)(nil),       // 3: auction.SubmitBidResponse
	(*SubmitBidBatchRequest)(nil),   // 4: auction.SubmitBidBatchRequest
	(*SubmitBidBatchResponse)(nil),  // 5: auction.SubmitBidBatchResponse
	(*RequestSaleInfoRequest)(nil),  // 6: auction.RequestSaleInfoRequest
	(*RequestSaleInfoResponse)(nil), // 7: auction.RequestSaleInfoResponse
	(*GetLatestTobRequest)(nil),     // 8: auction.GetLatestTobRequest
	(*GetLatestTobResponse)(nil),    // 9: auction.GetLatestTobResponse
	(*GetAuctionStateRequest)(nil),  // 10: auction.GetAuctionStateRequest
	(*GetAuctionStateResponse)(nil), // 11: auction.GetAuctionStateResponse
	(*AuctionInfo)(nil),             // 12: auction.AuctionInfo
	(*Bid)(nil),                     // 13: auction.Bid
	(*Tx)(nil),                      // 14: auction.Tx
	(*AuctionState)(nil),            // 15: auction.AuctionState
}
var file_proto_auction_auction_proto_depIdxs = []int32{
	12, // 0: auction.StartAuctionRequest.info:type_name -> auction.AuctionInfo
	13, // 1: auction.SubmitBidRequest.bid:type_name -> auction.Bid
	13, // 2: auction.SubmitBidBatchRequest.bids:type_name -> auction.Bid
	12, // 3: auction.RequestSaleInfoResponse.info:type_name -> auction.AuctionInfo
	14, // 4: auction.GetLatestTobResponse.tx_list:type_name -> auction.Tx
	15, // 5: auction.GetAuctionStateResponse.state:type_name -> auction.AuctionState
	12, // 6: auction.AuctionState.auction_info:type_name -> auction.AuctionInfo
	13, // 7: auction.AuctionState.bids:type_name -> auction.Bid
	0,  // 8: auction.AuctionService.StartAuction:input_type -> auction.StartAuctionRequest
	2,  // 9: auction.AuctionService.SubmitBid:input_type -> auction.SubmitBidRequest
	4,  // 10: auction.AuctionService.SubmitBidBatch:input_type -> auction.SubmitBidBatchRequest
	6,  // 11: auction.AuctionService.RequestSaleInfo:input_type -> auction.RequestSaleInfoRequest
	8,  // 12: auction.AuctionService.GetLatestTob:input_type -> auction.GetLatestTobRequest
	10, // 13: auction.AuctionService.GetAuctionState:input_type -> auction.GetAuctionStateRequest
	1,  // 14: auction.AuctionService.StartAuction:output_type -> auction.StartAuctionResponse
	3,  // 15: auction.AuctionService.SubmitBid:output_type -> auction.SubmitBidResponse
	5,  // 16: auction.AuctionService.SubmitBidBatch:output_type -> auction.SubmitBidBatchResponse
	7,  // 17: auction.AuctionService.RequestSaleInfo:output_type -> auction.RequestSaleInfoResponse
	9,  // 18: auction.AuctionService.GetLatestTob:output_type -> auction.GetLatestTobResponse
	11, // 19: auction.AuctionService.GetAuctionState:output_type -> auction.GetAuctionStateResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_auction_auction_proto_init() }
func file_proto_auction_auction_proto_init() {
	if File_proto_auction_auction_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_auction_auction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_auction_auction_proto_goTypes,
		DependencyIndexes: file_proto_auction_auction_proto_depIdxs,
		MessageInfos:      file_proto_auction_auction_proto_msgTypes,
	}.Build()
	File_proto_auction_auction_proto = out.File
	file_proto_auction_auction_proto_rawDesc = nil
	file_proto_auction_auction_proto_goTypes = nil
	file_proto_auction_auction_proto_depIdxs = nil
}
